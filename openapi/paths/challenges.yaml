post:
  tags:
    - Challenge
  summary: Add a challenge
  description: Adds a challenge
  operationId: createChallenge
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/ChallengeCreateRequest.yaml
    required: true
  responses:
    '201':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ChallengeCreateResponse.yaml
      description: Success
      links:
        GetChallengeById:
          $ref: ../components/links/GetChallengeById.yaml
        DeleteChallengeById:
          $ref: ../components/links/DeleteChallengeById.yaml
    '400':
      $ref: ../components/responses/BadRequest.yaml
    '409':
      $ref: ../components/responses/Conflict.yaml
    '500':
      $ref: ../components/responses/InternalServerError.yaml
get:
  tags:
    - Challenge
  summary: List all the challenges
  description: Returns all the challenges
  operationId: listChallenges
  parameters:
    - name: limit
      in: query
      description: Maximum number of results returned
      required: false
      schema:
        type: integer
        default: 10
        minimum: 10
        maximum: 100
    - name: offset
      in: query
      description: Index of the first result that must be returned
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
    - name: filter
      in: query
      description: Object that describes how to filter the results
      required: false
      schema:
        $ref: ../components/schemas/ChallengeFilter.yaml
      style: deepObject
      explode: true
    - name: tagIds
      in: query
      description: Array of tag ids used to filter the results
      required: false
      schema:
        type: array
        items:
          $ref: ../components/parameters/TagId.yaml
      # style: form
      # explode: true
    - name: sort
      in: query
      description: Property used to sort the results that must be returned
      required: false
      schema:
        type: string
        enum:
        - createdAt
        - updatedAt
    - name: direction
      description: Can be either `asc` or `desc`. Ignored without `sort` parameter.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PageOfChallenges.yaml
      description: Success
    '400':
      $ref: ../components/responses/BadRequest.yaml
    '500':
      $ref: ../components/responses/InternalServerError.yaml
delete:
  tags:
    - Challenge
  summary: Delete all challenges
  description: Delete all challenges
  operationId: deleteAllChallenges
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas/EmptyObject.yaml
    '500':
      $ref: ../components/responses/InternalServerError.yaml
